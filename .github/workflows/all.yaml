name: All

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'website/**'
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'website/**'
      - '**.md'

jobs:
  analyze:
    name: Analyze
    timeout-minutes: 45
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d # v2.8.0
        with:
          channel: 'stable'
          cache: true
      - uses: bluefireteam/melos-action@dd3c344d731938d2ab2567a261f54a19a68b5f6a # v2
      - name: 'Run Analyze'
        run: melos run analyze
      - name: 'Pub Check'
        run: |
          melos exec -c 1 --no-private --ignore="*example*" -- \
            dart pub publish --dry-run

  pub_get_check:
    name: Flutter Pub Get
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d # v2.8.0
        with:
          channel: 'stable'
          cache: true
      - uses: bluefireteam/melos-action@dd3c344d731938d2ab2567a261f54a19a68b5f6a # v2
      - name: 'Flutter Pub Get'
        run: |
          melos exec -c 1 --scope="*example*" -- \
            "flutter pub get"

  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d # v2.8.0
        with:
          channel: 'stable'
          cache: true
      - uses: bluefireteam/melos-action@dd3c344d731938d2ab2567a261f54a19a68b5f6a # v2
      - uses: Homebrew/actions/setup-homebrew@bc738ca370c95ed8d8b44c9b5fcba16e54f5218a # master
      - name: 'Install Tools'
        run: |
          flutter pub global activate flutter_plugin_tools
          brew install swiftformat
          brew install clang-format
          brew link --overwrite --force clang-format
      - name: 'Formatter version'
        run: |
          clang-format --version
          swiftformat --version
      - name: 'Dart, Java and Objective-C '
        run: |
          flutter pub global run flutter_plugin_tools format
          ./.github/workflows/scripts/validate-formatting.sh
      - name: 'Swift'
        if: ${{ success() || failure() }}
        run: |
          swiftformat .
          ./.github/workflows/scripts/validate-formatting.sh